import Foundation

/// Writes the textual representation of each    ← Summary
/// element of `items` to the standard output.
///                                              ← Blank line
/// The textual representation for each item `x` ← Additional discussion
/// is generated by the expression `String(x)`.
///
/// - Parameter separator: text to be printed    ⎫
///   between items.                             ⎟
/// - Parameter terminator: text to be printed   ⎬ Parameters section
///   at the end.                                ⎟
///                                              ⎭
/// - Note: To print without a trailing          ⎫
///   newline, pass `terminator: ""`             ⎟
///                                              ⎬ Symbol commands
/// - SeeAlso: `CustomDebugStringConvertible`,   ⎟
///   `CustomStringConvertible`, `debugPrint`.   ⎭
public func print(_ items: Any..., separator: String = " ", terminator: String = "\n"){
        // Empty
}


/// 표준 출력에 `items` 각 요소의 텍스트 표현을 작성합니다. ← 요약
///                                             ← 빈 줄
/// 각 요소인 `x`의 텍스트 표현은 `String(x)` 표현식으로   ← 추가 설명 제공됩니다.
///
/// - 매개변수 seperator: 요소 사이에 출력되는 텍스트      ⎫
/// - 매개변수 terminator: 끝부분에 출력되는 텍스트           ⎬ 매개변수 부분
///                                              ⎭
/// - 주의: 끝부분에 줄 바꿈을 출력하지 않으려면           ⎫
///   `terminator: ""`를 전달하세요.                ⎟
///                                              ⎬ 기타 참고사항
/// - 참조: `CustomDebugStringConvertible`,       ⎟
///   `CustomStringConvertible`, `debugPrint`.   ⎭
public func 프린트(items: Any..., separator: String = " ", terminator: String = "\n"){
        // 공백
}






struct List<Element> {
    private(set) var rawValue: [Element]
    
    init(_ rawValue: [Element]){
        self.rawValue = rawValue
    }
    mutating func remove(at position: Int) -> Element {
        rawValue.remove(at: position)
    }
}


var employees = List<Int>([200, 123, 434, 122])
employees.rawValue
employees.remove(at: 2)
employees.rawValue
